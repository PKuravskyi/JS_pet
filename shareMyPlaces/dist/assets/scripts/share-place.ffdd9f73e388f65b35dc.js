(()=>{"use strict";class e{constructor(e,t){this.fallbackText=t,this.contentTemplateEl=document.getElementById(e),this.modalTemplateEl=document.getElementById("modal-template")}show(){if("content"in document.createElement("template")){const e=document.importNode(this.modalTemplateEl.content,!0);this.modalElement=e.querySelector(".modal"),this.backdropElement=e.querySelector(".backdrop");const t=document.importNode(this.contentTemplateEl.content,!0);this.modalElement.appendChild(t),document.body.insertAdjacentElement("afterbegin",this.backdropElement),document.body.insertAdjacentElement("afterbegin",this.modalElement)}else alert(this.fallbackText)}hide(){document.body.removeChild(this.modalElement),document.body.removeChild(this.backdropElement),this.modalElement=null,this.backdropElement=null}}class t{constructor(e){this.render(e)}async render(e){if(!google)return void alert("Could not load Google Maps - please try again later!");const{Map:t}=await google.maps.importLibrary("maps"),a=new t(document.getElementById("map"),{center:e,zoom:15});new google.maps.Marker({position:e,map:a})}}const a="AIzaSyDF3JHjABtB-EwbfXZM5Fz5CsTwdEN1quE";new class{constructor(){const e=document.getElementById("address-form"),t=document.getElementById("locate-btn");this.shareLinkInputEl=document.getElementById("share-link"),this.shareBtn=document.getElementById("share-btn"),this.shareBtn.addEventListener("click",this.sharePlaceHandler.bind(this)),e.addEventListener("submit",this.findAddressHandler.bind(this)),t.addEventListener("click",this.locateUserHandler.bind(this))}sharePlaceHandler(){navigator.clipboard?navigator.clipboard.writeText(this.shareLinkInputEl.value).then((()=>{alert("Copied to clipboard!")})).catch((e=>{throw this.shareLinkInputEl.select(),new Error(e)})):this.shareLinkInputEl.select()}selectPlace(e,a){this.map?this.map.render(e):this.map=new t(e),fetch("https://petjs-sharemyplaces.onrender.com/add-location",{method:"POST",body:JSON.stringify({address:a,lat:e.lat,lng:e.lng}),headers:{"Content-Type":"application/json"}}).then((e=>e.json())).then((e=>{const t=e.locationId;this.shareBtn.disabled=!1,this.shareLinkInputEl.value=`${location.origin}/my-place?location=${t}`})).catch((e=>{throw new Error(e.message)}))}locateUserHandler(){if(!navigator.geolocation)return void alert("Location feature is not available in your browser - please use a more modern browser or manually enter an address.");const t=new e("loading-modal-content","Getting location...");t.show(),navigator.geolocation.getCurrentPosition((async e=>{const n={lat:e.coords.latitude,lng:e.coords.longitude},o=await async function(e){return await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${e.lat},${e.lng}&key=${a}`).then((e=>{if(e.data.error_message)throw`Something went wrong with Google Maps API\nMessage: ${e.data.error_message}\nStatus: ${e.data.status}`;return e.data.results[0].formatted_address})).catch((e=>{throw new Error(e)}))}(n);t.hide(),this.selectPlace(n,o)}),(e=>{throw t.hide(),new Error(e)}))}async findAddressHandler(t){t.preventDefault();const n=t.target.querySelector("#address").value;if(!n||0===n.trim().length)return void alert("Invalid address - please try again!");const o=new e("loading-modal-content","Getting location...");o.show();const s=await async function(e){const t=encodeURI(e);return await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${t}&key=${a}`).then((e=>e.data.results[0].geometry.location)).catch((e=>{throw new Error(e)}))}(n);try{this.selectPlace(s,n)}catch(e){alert(e.message)}o.hide()}}})();